@model ProductFilterViewModel



<h1>search product Home controller</h1>

<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-12">
            <nav class="breadcrumb bg-light mb-30">
                <a class="breadcrumb-item text-dark" href="#">Home</a>
                <a class="breadcrumb-item text-dark" href="#">Shop</a>
                <span class="breadcrumb-item active">Shop List</span>
            </nav>
        </div>
    </div>
</div>
<!-- Breadcrumb End -->
<!-- Shop Start -->
<div class="container-fluid">
    <div class="row px-xl-5">

        <!-- Shop Sidebar Start -->
        <div class="col-lg-3 col-md-4">

            <h4>Select Filters</h4>
            <br />
            <form method="get" asp-controller="Home" asp-action="FilterSearchResults">
                <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Department</span></h5>
                <div class="bg-light p-4 mb-30">
                    @foreach (var item in Model.Departments)
                    {
                        <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input class="custom-control-input department-checkbox " type="checkbox" name="departments" value="@item.Name" id="department-@item.Id" />
                            <label class="custom-control-label" for="department-@item.Id">@item.Name</label>
                        </div>
                    }

                </div>
                <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Category</span></h5>
                <div class="bg-light p-4 mb-30">
                    @foreach (var item in Model.Categories)
                    {
                        <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input class="custom-control-input " type="checkbox" name="categories" value="@item.Id" id="categories-@item.Id" />
                            <label class="custom-control-label" for="categories-@item.Id">@item.Name</label>
                        </div>
                    }

                </div>

                <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Price Range</span></h5>
                <div class="bg-light p-4 mb-30">
                    <div>
                        @*<input type="number" name="minPrice" placeholder="Minimum Price" style="display: block; margin-bottom: 10px;" />
                            <br>
                            <input type="number" name="maxPrice" placeholder="Maximum Price" style="display: block;" />*@
                    </div>
                </div>

                <button type="submit">Apply Filters</button>



            </form>
        </div>

        <!-- Shop Product Start -->
        <div class="col-lg-9 col-md-8">
            <div class="row pb-3" id="products-div">
                <div class="col-12 pb-1">
                    <div class="d-flex align-items-center justify-content-between mb-4">
                        <p>filter details can be here</p>
                    </div>
                </div>
                @if (Model.Products.Count == 0)
                {
                    <div>
                        no product found
                    </div>
                }

                @for (var i = 0; i < Model.Products.Count; i++)
                {
                    <div class="col-lg-4 col-md-6 col-sm-6 pb-1">
                        <div class="product-item bg-light mb-4">
                            <div class="product-img position-relative overflow-hidden">
                                @*<img class="img-fluid w-100 " src="~/Uploads/Wireless-Smoke-Temperature-detector-01.jpg" alt="Image">*@
                                <img class="img-fluid w-100 " src="~/Uploads/Wireless-Smoke-Temperature-detector-01.jpg" alt="Image">

                                <div class="product-action">
                                    <a class="btn btn-outline-dark btn-square" href=""><i class="fa fa-shopping-cart"></i></a>
                                    <a class="btn btn-outline-dark btn-square" href=""><i class="far fa-heart"></i></a>
                                    <a class="btn btn-outline-dark btn-square" href=""><i class="fa fa-sync-alt"></i></a>
                                    <a class="btn btn-outline-dark btn-square" href=""><i class="fa fa-search"></i></a>
                                </div>
                            </div>
                            <div class="text-center py-4">
                                <a class="h6 text-decoration-none text-truncate" href="">@Model.Products[i].Name</a>
                                <div class="d-flex align-items-center justify-content-center mt-2">
                                    <h5>@Model.Products[i].Price</h5>
                                </div>
                                @*<div class="d-flex align-items-center justify-content-center mb-1">
                                        <small class="fa fa-star text-primary mr-1"></small>
                                        <small class="fa fa-star text-primary mr-1"></small>
                                        <small class="fa fa-star text-primary mr-1"></small>
                                        <small class="fa fa-star text-primary mr-1"></small>
                                        <small class="fa fa-star text-primary mr-1"></small>
                                        <small>(99)</small>
                                    </div>*@
                            </div>
                        </div>
                    </div>
                }



                <div class="col-12">
                    <nav>
                        <ul class="pagination justify-content-center">
                            <li class="page-item disabled"><a class="page-link" href="#">Previous</a></li>
                            <li class="page-item active"><a class="page-link" href="#">1</a></li>
                            <li class="page-item"><a class="page-link" href="#">2</a></li>
                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                            <li class="page-item"><a class="page-link" href="#">Next</a></li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
        <!-- Shop Product End -->
    </div>
</div>
<!-- Shop End -->
<!-- Back to Top -->
<a href="#" class="btn btn-primary back-to-top"><i class="fa fa-angle-double-up"></i></a>

@section scripts{

    @*<script>
            $(document).ready(function () {
                // Function to filter products based on selected departments
                function filterProducts(selectedDepartments) {
                    var queryString = selectedDepartments.length === 0 ? "" : "?departments=" + selectedDepartments.join(",");

                    $.ajax({
                        type: 'GET',
                        url: '/Home/FilterSearchResults' + queryString,
                        success: function (response) {
                            // Replace the contents of the table with the filtered results
                            $('#products-div').html(response);
                        }
                    });
                }

                // Function to get checked checkboxes and update URL
                function updateURL() {
                    var selectedDepartments = $('input[type="checkbox"][name="departments"]:checked').map(function () {
                        return $(this).val();
                    }).get();

                    var params = new URLSearchParams();

                    if (selectedDepartments.length > 0) {
                        params.set('departments', selectedDepartments.join(','));
                        history.replaceState({}, '', '?' + params.toString());
                    } else {
                        // Remove the 'departments' parameter from the URL
                        history.replaceState({}, '', window.location.pathname);
                    }

                    // Trigger filtering based on selected departments
                    filterProducts(selectedDepartments);
                }

                // Function to load checked checkboxes from the URL query string
                function loadCheckedCheckboxes() {
                    var params = new URLSearchParams(window.location.search);
                    var selectedDepartments = params.getAll('departments');

                    $('input[type="checkbox"][name="departments"]').prop('checked', false);
                    selectedDepartments.forEach(function (departmentId) {
                        $('input[type="checkbox"][name="departments"][value="' + departmentId + '"]').prop('checked', true);
                    });

                    // Trigger filtering based on selected departments
                    filterProducts(selectedDepartments);
                }

                // Load checked checkboxes from the URL query string when the page is ready
                loadCheckedCheckboxes();

                // Bind event handler to all checkboxes
                $('input[type="checkbox"][name="departments"]').on('change', function () {
                    // Update the URL and filter products based on selected departments
                    updateURL();
                });
            });
        </script>*@


    <script>
        $(document).ready(function () {
            function filterProducts(selectedDepartments) {

                // Get the current URL
                var currentUrl = new URL(window.location.href);

                // Get the value of the 'pname' parameter from the current URL
                var searchparam = currentUrl.searchParams.get('pname');


                //add search parameter name and value to URL
                var params = new URLSearchParams();
                params.set('pname', searchparam);

                // Build the updated URL with the 'pname' and 'departments' parameters
                // add department name and value to URL
                if (selectedDepartments.length > 0) {
                    params.set('departments', selectedDepartments.join(','));                  
                }

                $.ajax({
                    type: 'GET',
                    url: '/Home/FilterSearchResults?' + params.toString(),
                    success: function (response) {
                        // Replace the contents of the table with all products
                        $('#products-div').html(response);
                    }
                });

            }

            function updateURL() {

                var selectedDepartments = $('input[type="checkbox"][name="departments"]:checked').map(function () {
                    return $(this).val();
                }).get();

                sessionStorage.setItem('checkboxesstatus', selectedDepartments.join(','));

                // Get the current URL
                var currentUrl = new URL(window.location.href);

                // Get the value of the 'pname' parameter from the current URL
                var searchparam = currentUrl.searchParams.get('pname');


                //add search parameter name and value to URL
                var params = new URLSearchParams();
                params.set('pname', searchparam);

                // Build the updated URL with the 'pname' and 'departments' parameters
                // add department name and value to URL
                if (selectedDepartments.length > 0) {
                    params.set('departments', selectedDepartments.join(','));

                    history.replaceState({}, '', '?' + params.toString());
                }
                else {

                    params.delete('departments');
                }

                history.replaceState({}, '', '?' + params.toString());



                // Trigger filtering based on selected departments
                filterProducts(selectedDepartments);

            }

            function loadCheckedCheckboxes() {

                var depparams = new URLSearchParams(window.location.search);
                var selectedDepartments = depparams.getAll('departments');
                var getcheckboxes = sessionStorage.getItem('checkboxesstatus');
                var ggez = getcheckboxes ? getcheckboxes.split(',') : [];

                $('input[type="checkbox"][name="departments"]').prop('checked', false);

                ggez.forEach(function (retrieveddepartment) {
                    $('input[type="checkbox"][name="departments"][value="' + retrieveddepartment + '"]').prop('checked', true);
                });

                // Trigger filtering based on selected departments
                filterProducts(selectedDepartments);

            }

            // Load checked checkboxes from the URL query string when the page is ready
            loadCheckedCheckboxes();

            // Bind event handler to all checkboxes
            $('input[type="checkbox"][name="departments"]').on('change', function () {
                // Update the URL and filter products based on selected departments
                updateURL();
            });

        });


    </script>





    @*<script> // working latest
        //get checked checkboxes and add them to the URL with the search parameter
        $('input[type="checkbox"][name="departments"]').on('change', function () {
            // Get the current URL
            var currentUrl = new URL(window.location.href);

            // Get the value of the 'pname' parameter from the current URL
            var searchparam = currentUrl.searchParams.get('pname');

            // Get all checked department IDs
            var selectedDepartments = $('input[type="checkbox"][name="departments"]:checked').map(function () {
                return $(this).val();
            }).get();

            //add search parameter name and value to URL
            var params = new URLSearchParams();
            params.set('pname', searchparam);


            // Build the updated URL with the 'pname' and 'departments' parameters
            // add department name and value to URL
            if (selectedDepartments.length > 0) {
                params.set('departments', selectedDepartments.join(','));
            }


            var updatedUrl = currentUrl.origin + currentUrl.pathname + '?' + params.toString();

            // Update the URL using history.replaceState
            history.replaceState({}, '', updatedUrl);
            $.ajax({
                type: 'GET',
                url: '/Home/FilterSearchResults?' + params.toString(),
                data: {
                    departments: selectedDepartments,

                },
                success: function (response) {
                    // Replace the contents of the table with all products
                    $('#products-div').html(response);
                }
            });

        });

    </script>*@


    




    @*<script>
            $('input[type="checkbox"][name="departments"]').on('change', function () {

            $.ajax({
                type: 'GET',
                url: '/Home/FilterSearchResults',
                data: {
                    departments: selectedDepartments

                },
                success: function (response) {
                    // Replace the contents of the table with all products
                    $('#products-div').html(response);
                }
               });

            });
        </script>*@



}